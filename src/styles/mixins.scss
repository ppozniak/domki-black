@use "sass:math";
@import './variables.scss';

@mixin to-mobile() {
  @media (max-width: $mobile) {
    @content;
  }
}

@mixin to-landscape() {
  @media (max-width: $landscape) {
    @content;
  }
}

@mixin to-portrait() {
  @media (max-width: $portrait) {
    @content;
  }
}

@mixin from-portrait() {
  @media (min-width: $portrait) {
    @content;
  }
}

@mixin from-landscape() {
  @media (min-width: $landscape) {
    @content;
  }
}

@mixin from-desktop() {
  @media (min-width: $desktop) {
    @content;
  }
}

@mixin rwdclass($class) {
  @include from-portrait() {
    .#{$class}\@portrait {
      @content;
    }
  }
  @include from-landscape() {
    .#{$class}\@landscape {
      @content;
    }
  }
  @include from-desktop() {
    .#{$class}\@desktop {
      @content;
    }
  }
  @include to-mobile() {
    .#{$class}\@mobile {
      @content;
    }
  }
  .#{$class} {
    @content;
  }
}

@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }
    @media screen and (min-width: $min-vw) {
      @each $property in $properties {
        #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
    }
    @media screen and (min-width: $max-vw) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

@function strip-unit($value) {
  @return math.div($value, ($value * 0 + 1));
}

%list-reset {
  margin: 0;
  padding: 0;
  list-style-type: none;
}
